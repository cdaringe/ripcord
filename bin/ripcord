#!/usr/bin/env node

'use strict'

require('perish')
const app = require('../src/app')
const program = require('commander')
const path = require('path')
const fs = require('fs')
const pkgPath = path.resolve(__dirname, '../package.json')
const pkg = require(pkgPath)
const ripcord = require('../src/')
const counsel = require('counsel')

let action = { name: null, arg: null, options: null }

program
  .option('-l, --log-level [error|warn|info|verbose|debug|silly]', 'set the log level. default info')

program
  .command('report [arg]')
  .option('-o, --output [path]', 'path to dump the report')
  .description('generate tw dependency report')
  .action((arg, opts) => { action = { name: 'report', arg: arg, options: opts } })

program
  .command('counsel [apply|check]')
  .description('deploy tripwire project conventions via counsel')
  .action((arg, opts) => { action = { name: 'counsel', arg: arg, options: opts } })


program.parse(process.argv)

counsel.logger.transports.console.level = program.logLevel || app.logLevel

if (!program.args || program.args.length === 0) {
  program.help()
  process.exit(1)
}

// giddy up.
let result = ripcord[action.name].apply(ripcord, [action.arg, action.options])

if (action.name === 'report') {
  const output = action.options.output
  let resultJson = JSON.stringify(result, null, 2)
  if (output) {
    const REPORT_NAME_DEFAULT = 'tw-dependencies.json'
    let dest = path.isAbsolute(output) ? output : path.resolve(process.cwd(), output)
    dest = counsel.project.isDir(dest) ? path.join(dest, REPORT_NAME_DEFAULT) : dest
    fs.writeFileSync(dest, resultJson)
  } else {
    process.stdout.write(resultJson)
  }
}

module.exports = program
